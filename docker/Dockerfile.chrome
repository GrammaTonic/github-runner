# Gebruik een specifieke versie voor reproduceerbare builds
FROM ubuntu:22.04 AS base

# --- METADATA EN ARGUMENTEN ---
LABEL maintainer="GrammaTonic"
LABEL description="Optimized GitHub Actions Self-Hosted Runner for Chrome and web UI testing"
LABEL version="2.0.6"

# Argumenten bovenaan definiëren voor eenvoudig beheer
ARG TARGETARCH
ARG RUNNER_VERSION="2.328.0"
ARG CHROME_VERSION="140.0.7339.80"
ARG NODE_VERSION="20"

# Omgevingsvariabelen
ENV DEBIAN_FRONTEND=noninteractive
ENV CHROME_BIN=/usr/bin/google-chrome
ENV DISPLAY=:99
ENV PATH="/usr/local/bin:/usr/bin:/usr/local/sbin:/sbin:/bin:/opt/chrome-linux64:/actions-runner:/home/runner/.npm-global/bin:$PATH"
ENV NODE_PATH="/home/runner/.npm-global/lib/node_modules"

# Stel SHELL in om pipe-fouten correct af te handelen
SHELL ["/bin/bash", "-o", "pipefail", "-c"]

# --- SETUP ALS ROOT GEBRUIKER ---

# --- ARCHITECTUUR CONTROLE ---
RUN if [ "$TARGETARCH" != "amd64" ]; then \
      echo "ERROR: Chrome runner image only supports linux/amd64 (x86_64)." && exit 1; \
    fi

# --- SYSTEEM, NODE.JS, PYTHON, CHROME EN DRIVERS INSTALLEREN ---
RUN apt-get update && apt-get install -y --no-install-recommends curl ca-certificates gnupg \
    && curl -fsSL https://deb.nodesource.com/setup_${NODE_VERSION}.x | bash - \
    && apt-get install -y --no-install-recommends \
    # Systeem utilities
    sudo \
    lsb-release \
    git \
    jq \
    libicu-dev \
    # Chrome & UI testing dependencies
    libnss3 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxtst6 libatk1.0-0 libatk-bridge2.0-0 libdrm2 libgbm1 libasound2-dev libatspi2.0-0 libgtk-3-0 libpangocairo-1.0-0 libcairo2 libgdk-pixbuf2.0-0 fonts-liberation fonts-noto-color-emoji fonts-noto-cjk xvfb procps \
    # Node.js & Python
    nodejs python3 python3-pip python3-venv \
    # Download tools
    wget unzip \
    # Download en installeer Chrome
    && CHROME_URL="https://storage.googleapis.com/chrome-for-testing-public/${CHROME_VERSION}/linux64/chrome-linux64.zip" \
    && curl -fSL -o /tmp/chrome.zip "$CHROME_URL" \
    && unzip -o /tmp/chrome.zip -d /opt/ \
    && ln -sf /opt/chrome-linux64/chrome /usr/bin/google-chrome \
    # Download en installeer ChromeDriver
    && CHROMEDRIVER_URL="https://storage.googleapis.com/chrome-for-testing-public/${CHROME_VERSION}/linux64/chromedriver-linux64.zip" \
    && curl -fSL -o /tmp/chromedriver.zip "$CHROMEDRIVER_URL" \
    && unzip -o /tmp/chromedriver.zip -d /tmp/ \
    && mv /tmp/chromedriver-linux64/chromedriver /usr/local/bin/chromedriver \
    # Ruim op
    && rm -rf /tmp/*.zip /tmp/chromedriver-linux64 \
    && rm -rf /var/lib/apt/lists/*

# --- GEBRUIKER EN DIRECTORIES AANMAKEN ---
RUN useradd -m -s /bin/bash runner \
    && usermod -aG sudo runner \
    && echo "runner ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers \
    && mkdir -p /home/runner/workspace /actions-runner /home/runner/.npm-global \
    && chown -R runner:runner /home/runner /actions-runner

# --- SETUP ALS RUNNER GEBRUIKER ---
USER runner
WORKDIR /home/runner

# --- NPM, PIP EN PLAYWRIGHT PACKAGES INSTALLEREN ---
RUN npm config set prefix /home/runner/.npm-global \
    && npm install -g playwright cypress @playwright/test \
    && npm cache clean --force \
    && pip3 install --no-cache-dir --upgrade pip \
    && pip3 install --no-cache-dir selenium pytest pytest-selenium webdriver-manager \
    && npx playwright install chromium

# --- GITHUB ACTIONS RUNNER (MULTI-STAGE) ---
FROM base AS builder
USER root
ARG RUNNER_VERSION
WORKDIR /tmp
RUN curl -o "actions-runner.tar.gz" -L "https://github.com/actions/runner/releases/download/v${RUNNER_VERSION}/actions-runner-linux-x64-${RUNNER_VERSION}.tar.gz" \
    && tar xzf "./actions-runner.tar.gz" \
    && rm "./actions-runner.tar.gz"
# Voorkom 'Last USER should not be root' waarschuwing
USER runner

# --- FINALE IMAGE SAMENSTELLEN ---
FROM base
# Schakel naar root om bestanden te kopiëren en permissies te zetten
USER root
COPY --from=builder --chown=runner:runner /tmp /actions-runner
COPY --chown=runner:runner entrypoint-chrome.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# Schakel terug naar de runner voor de uiteindelijke image
USER runner
WORKDIR /home/runner

# --- VERIFICATIE, HEALTHCHECK EN ENTRYPOINT ---
RUN echo "Final PATH: $PATH" \
    && node --version \
    && npm --version \
    && npx playwright --version \
    && google-chrome --version \
    && chromedriver --version \
    && /actions-runner/run.sh --version

HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD pgrep -f "Runner.Listener" > /dev/null || exit 1

ENTRYPOINT ["/entrypoint.sh"]

